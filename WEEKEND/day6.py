# -*- coding: utf-8 -*-
"""Day6

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Edh3lfDvMyvpNYz4ffTKwOIB7KGxLET2
"""

import pandas as pd
from ydata_profiling import ProfileReport  # Correct import
# Load sample dataset
df = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/titanic.csv")
# Generate profile report
profile = ProfileReport(df, explorative=True)
# Display report in Colab
profile.to_notebook_iframe()
import pandas as pd
from ydata_profiling import ProfileReport  # Correct import

# Load sample dataset
df = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/titanic.csv")

# Generate profile report
profile = ProfileReport(df, explorative=True)

# Display report in Colab
profile.to_notebook_iframe()
profile.to_file("titanic_report.html")

!pip install ydata-profiling
import pandas as pd
from ydata_profiling import ProfileReport  # Correct import
# Load sample dataset
df = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/titanic.csv")
# Generate profile report
profile = ProfileReport(df, explorative=True)
# Display report in Colab
profile.to_notebook_iframe()
import pandas as pd
from ydata_profiling import ProfileReport  # Correct import

# Load sample dataset
df = pd.read_csv("https://raw.githubusercontent.com/mwaskom/seaborn-data/master/titanic.csv")

# Generate profile report
profile = ProfileReport(df, explorative=True)

# Display report in Colab
profile.to_notebook_iframe()
profile.to_file("titanic_report.html")

import numpy as np
import pandas as pd
from scipy import stats
data = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
import numpy as np
import pandas as pd
from scipy import stats
data = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
mean_value = np.mean(data)
print(f"Mean: {mean_value}")
variance = np.var(data, ddof=1)  # Sample variance

# Standard Deviation
std_dev = np.std(data, ddof=1)
print(f"Variance: {variance}, Standard Deviation: {std_dev}")

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# Sample data
data = [10, 12, 14, 15, 17, 20, 30, 100]  # 100 is an outlier

# Convert to DataFrame
df = pd.DataFrame(data, columns=['values'])

# Calculate Q1, Q3, and IQR
Q1 = df['values'].quantile(0.25)
Q3 = df['values'].quantile(0.75)
IQR = Q3 - Q1

# Define outliers
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR
outliers = df[(df['values'] < lower_bound) | (df['values'] > upper_bound)]

# Plot Boxplot
plt.boxplot(df['values'])
plt.title("Box Plot to Detect Outliers")
plt.show()

# Print outliers
print("Outliers:\n", outliers)

!pip install sweetviz
import sweetviz as sv
# Generate a report
report = sv.analyze(df)
# Show the report in a browser
report.show_html("titanic_sweetviz.html")
report = sv.analyze(df)
# Show the report in a browser
report.show_html("titanic_sweetviz.html")

!pip install dtale
import dtale
# Launch D-Tale dashboard
dtale.show(df)
dtale.show(df)